# This workflow automates the process of building and creating a GitHub Release
# whenever a new tag (starting with 'v') is pushed to the repository.

# Name of the workflow displayed in the GitHub Actions tab.
name: Release Extension

# Defines when the workflow should run.
on:
  push:
    # This workflow triggers only when a tag is pushed.
    # The pattern 'v*' matches tags like v1.0.0, v1.0.1, etc.
    tags:
      - 'v*'

# Defines the jobs that will run as part of this workflow.
jobs:
  # A single job named 'build-and-release'.
  build-and-release:
    # Specifies the type of machine the job will run on.
    runs-on: ubuntu-latest
    # Defines the sequence of steps within the job.
    steps:
      # Checkout the code from the repository.
      - name: Checkout code
        uses: actions/checkout@v3 # Uses the official checkout action.

      # Set up Node.js environment.
      - name: Setup Node.js
        uses: actions/setup-node@v3 # Uses the official setup-node action.
        with:
          node-version: '18' # Specifies the Node.js version to use.

      # Extract the version number from the Git tag.
      # The GITHUB_REF environment variable contains the tag name (e.g., refs/tags/v1.0.0).
      # We remove 'refs/tags/v' to get just the version number.
      - name: Get version from tag
        id: get_version # Assigns an ID to this step to reference its outputs (though not strictly needed here).
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV # Sets an environment variable VERSION.

      # Install project dependencies using npm.
      - name: Install dependencies
        run: npm install

      # Update the version in package.json to match the Git tag version.
      # This ensures the version in the manifest (updated by build.js) matches the tag.
      # --no-git-tag-version prevents npm from creating another git tag/commit.
      - name: Update package.json version
        run: npm version ${{ env.VERSION }} --no-git-tag-version --allow-same-version # Uses the VERSION env var set in step 3.

      # Run the build script to create the extension packages (ZIP files).
      - name: Build extension packages
        run: npm run build # Executes the 'build' script defined in package.json.

      # Create a GitHub Release and upload the built ZIP files as assets.
      - name: Create GitHub Release
        id: create_release # Assigns an ID to this step.
        uses: softprops/action-gh-release@v1 # Uses a third-party action for creating releases.
        with:
          files: release/*.zip # Specifies the files to upload as release assets.
          name: ${{ github.ref_name }} # Sets the release name to the tag name (e.g., v1.0.0).
          generate_release_notes: true # Automatically generates release notes based on commit history.
        env:
          # Provides the GitHub token needed by the action to interact with the GitHub API.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}